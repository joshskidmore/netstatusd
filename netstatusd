#!/usr/bin/env bash

shopt -s nullglob

CONFIG_DIR=$XDG_CONFIG_HOME/netstatusd
CONFIG_FILE=$CONFIG_DIR/config
FAILED_ATTEMPT_COUNT=0
INTERVAL_COUNT=1


if [[ ! -f $CONFIG_FILE ]]; then
  echo "A configuration file was not found in at $CONFIG"
  exit
fi

source $CONFIG_FILE



ping_check() {
  local host=${1:-$PRIMARY_HOST}
  echo $(ping -c 1 -W 2 $host 2>&1 | awk -F "=" '/time=/ {print $4}' | cut -d " " -f 1)
}

walled_garden_check() {
  local _status=$(curl --write-out "%{http_code} %{time_pretransfer}"  --silent --connect-timeout 2 --output /dev/null $WALLED_GARDEN_URI)
  local status_code=$(echo "$_status" | cut -d " " -f 1)
  local resp_full=$(echo $_status | cut -d " " -f 2)
  local resp=$(printf "%.1f" $(echo "scale=4; $resp_full*1000" | bc -l))

  [[ $status_code == "204" ]] && echo "$resp" || echo ""
}

load_actions() {
  SUCCESSFUL_ATTEMPT_ACTIONS=$(list_actions "attempt-successful.d")
  UNSUCCESSFUL_ATTEMPT_ACTIONS=$(list_actions "attempt-unsuccessful.d")
  WHEN_UP_ACTIONS=$(list_actions "when-up.d")
  WHEN_DOWN_ACTIONS=$(list_actions "when-down.d")
}

list_actions() {
  local dir=$1
  local actions=($CONFIG_DIR/$dir/*)
  echo "${actions[@]}"
}

execute_actions() {
  local actions=$1
  local source=$2
  local latency=$3
  local interval_count=$4
  local failed_attempt_count=$5

  for action in $actions; do
    $action "$source" "$latency" "$interval_count" "$failed_attempt_count" &
  done
}

create_data_dir() {
  [[ ! -d $DATA_DIR ]] && mkdir $DATA_DIR
}

check() {
  local latency=$(ping_check $PRIMARY_HOST)
  local source="primary"

  if [[ -z $latency ]]; then
    latency=$(ping_check $SECONDARY_HOST)
    source="secondary"
  fi

  if [[ -z $latency ]]; then
    latency=$(walled_garden_check)
    source="walled_garden"
  fi

  if [[ -n $latency ]]; then
    if [[ $FAILED_ATTEMPT_COUNT -ge $MAX_ATTEMPTS ]] && [[ -n $(walled_garden_check) ]]; then
      execute_actions "$WHEN_UP_ACTIONS" "$source" "$latency" "$INTERVAL_COUNT" "$FAILED_ATTEMPT_COUNT"
      FAILED_ATTEMPT_COUNT=0
    fi

    [[ $INTERVAL_COUNT == 1 ]] && [[ -n $(walled_garden_check) ]] && \
      execute_actions "$WHEN_UP_ACTIONS" "$source" "$latency" "$INTERVAL_COUNT" "$FAILED_ATTEMPT_COUNT"

    execute_actions "$SUCCESSFUL_ATTEMPT_ACTIONS" "$source" "$latency" "$INTERVAL_COUNT" "$FAILED_ATTEMPT_COUNT"
  else
    latency=""
    source=""

    [[ $FAILED_ATTEMPT_COUNT == $MAX_ATTEMPTS ]] && \
      execute_actions "$WHEN_DOWN_ACTIONS" "$source" "$latency" "$INTERVAL_COUNT" "$FAILED_ATTEMPT_COUNT"

    [[ $INTERVAL_COUNT == 1 ]] && \
      execute_actions "$WHEN_DOWN_ACTIONS" "$source" "$latency" "$INTERVAL_COUNT" "$FAILED_ATTEMPT_COUNT"

    execute_actions "$UNSUCCESSFUL_ATTEMPT_ACTIONS" "$source" "$latency" "$INTERVAL_COUNT" "$FAILED_ATTEMPT_COUNT"

    ((FAILED_ATTEMPT_COUNT++))
  fi

  #echo "[$INTERVAL_COUNT] source: $source | latency: $latency | FAILED_ATTEMPT_COUNT: $FAILED_ATTEMPT_COUNT"

  ((INTERVAL_COUNT++))
}


create_data_dir
load_actions

while sleep $INTERVAL; do
  check
done
